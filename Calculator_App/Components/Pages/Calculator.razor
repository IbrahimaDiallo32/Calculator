@page "/calculator"
@rendermode InteractiveServer

<h1>Calculator</h1>

<label for = "inputA">Input A</label>
<label for = "inputB"> Input B</label>
<div>
    <input type="text" @bind= "inputA" placeholder="0"> 
    <input type="text" @bind= "inputB" placeholder="0"> 
        
</div>

<div>
    <button @onclick= "AddNumbers" background-color = "#EBEBEB" color = "#000000">A + B</button>
</div>
<div>
    <button @onclick= "SubtractNumbers">A - B</button>
</div>
<div>
    <button @onclick= "MultiplyNumbers">A * B</button>
</div>
<button @onclick= "DivideNumbers">A / B</button>


@if (result.HasValue)
{
    <h3>Result: @result</h3>
}
@if (error.Equals(true))
{
    <h3>Not a number</h3>
}


@code {
    float? inputA { get; set; }
    float? inputB { get; set; }
    float? result { get; set; }
    bool error { get; set; }
    bool invalidInput { get; set; }

    //Method to add numbers
    private void AddNumbers()
    {
        if (!inputA.Equals(typeof(int)) || !inputA.Equals(typeof(float)))
        {
            invalidInput = true;
            return;
        }
        if(!inputB.Equals(typeof(int)) || !inputB.Equals(typeof(float)))
        {
            invalidInput = true;
            return;
        }
        //If inputs have valid values complete the operation
        if (inputA.HasValue && inputB.HasValue)
        {
            result = inputA + inputB;
        }
        else
        {
            result = null;
        }
    }

    //Method to subtract numbers
    private void SubtractNumbers()
    {
        //If inputs have values complete the operation
        if (inputA.HasValue && inputB.HasValue)
        {
            result = inputA - inputB;
        }
        //if either input is empty the result will be null
        else
        {
            result = null;
        }
    }

    private void MultiplyNumbers()
    {
        //If inputs have values complete the operation
        if (inputA.HasValue && inputB.HasValue)
        {
            result = inputA * inputB;
        }
        //if either input is empty the result will be null
        else
        {
            result = null;
        }
    }

    //Method to divide numbers catching division by 0 here.
    private void DivideNumbers()
    { 
        //Immediately catch division by 0 error and set error boolean to 0
        if (inputB == 0) 
        {
            error = true;
        }
        else if (inputB != 0)
        {
            error = false;
        }
        //If both inputs have values and there is no error the operation can be completed
        if (inputA.HasValue && inputB.HasValue && !error)
        {
            result = inputA / inputB;
        }
        else
        {
            result = null;
        }
    }
}
